name: Ubuntu
# Qt官方没有linux平台的x86包
on: 
  workflow_dispatch:
  push:
    paths:
      - '*.pro'
      - '*.h'
      - '*.cpp'
      - '*.ui'
      - '.github/workflows/ubuntu.yml'
  pull_request:
    paths:
      - '*.pro'
      - '*.h'
      - '*.cpp'
      - '*.ui'
      - '.github/workflows/ubuntu.yml' 
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-18.04,ubuntu-20.04]
        os: [ubuntu-20.04]
        # qt_ver: [5.9.9,5.12.10,5.15.2,6.2.2]
        qt_ver: [5.9.9]
        qt_arch: [gcc_64]
        exclude: 
          # Qt6.2.2 need GLIBC_2.28, ubuntu 18.04 have not.
          - os: ubuntu-18.04
            qt_ver: 6.2.2
            qt_arch: gcc_64
    env:
      targetName: samp2_2
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          cached: 'false'
      - name: copy qml file
        run: |
          ls -a ../Qt/${{ matrix.qt_ver }}/${{ matrix.qt_arch }}
          cp -r ../Qt/${{ matrix.qt_ver }}/${{ matrix.qt_arch }}/qml ./qml
      - name: ubuntu install GL library
        run: sudo apt-get install -y libglew-dev libglfw3-dev
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: build ubuntu
        run: |
          qmake
          make
      - name: Install LinuxDeploy
        uses: miurahr/install-linuxdeploy-action@v1
        with:
          plugins: qt appimage
      # 打包
      - name: package
        run: |
          # 拷贝依赖
          linuxdeploy-x86_64.AppImage --plugin=qt --output=appimage --create-desktop-file --icon-file=${targetName}.svg --executable=bin/release/${targetName} --appdir bin/release/
          ls -a
          mv ${{ env.targetName }}-*.AppImage ${{ env.targetName }}.AppImage
      # 上传artifacts          
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.targetName }}_${{ matrix.os }}_${{matrix.qt_ver}}.zip
          path: |
            ${{ env.targetName }}.AppImage
            ${{ env.Qt5_DIR }}/qml/
      # tag 上传Release
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.targetName }}_${{ matrix.os }}_${{matrix.qt_ver}}.zip
          asset_name: ${{ env.targetName }}_${{ matrix.os }}_${{ matrix.qt_ver }}.zip
          tag: ${{ github.ref }}
          overwrite: true
